services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    env_file:
      - .env
    networks:
      - remote
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    links:
      - db


  db:
    container_name: db
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: events
    ports:
      - "5432:5432"
    networks:
      - remote
    volumes:
      - ./db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5


  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - remote
    depends_on:
      - db

networks:
  remote:
    driver: bridge